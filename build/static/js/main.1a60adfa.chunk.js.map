{"version":3,"sources":["Component/ResultForm.jsx","Api/RadiotherapyApi.js","Pages/mainPage.jsx","App.js","reportWebVitals.js","index.js","css/MainPage.module.css"],"names":["Title","Typography","ResultForm","props","result","level","url","details","a","stages","loweredStagings","staging","map","stage","toLowerCase","stagingOneHot","includes","data","neckWidth","neckDepth","bodyEqSphDi","bodyVolume","weight","ctvVol","ctvEqdDi","ptvVol","ptvEqdDi","axios","post","Option","Select","stagingOptions","value","name","MainPage","useState","setResult","React","visible","setVisible","className","styles","container","inputContainer","style","paddingLeft","onFinish","values","sendData","then","prediction","message","success","err","error","console","log","Item","label","gutter","xs","sm","md","lg","span","rules","required","title","content","mode","placeholder","width","option","justify","type","htmlType","onClick","window","location","reload","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1a60adfa.chunk.js","sourcesContent":["import { Typography } from 'antd';\nconst { Title } = Typography;\n\nconst ResultForm = (props) => {\n  let { result } = props;\n  if (result === 1) {\n    return <Title level={4}>&#9989; YES &#9989; This patient may need a treatment replan </Title>;\n  } else if (result === 0) {\n    return <Title level={4}>&#10060; No &#10060;  This patient may not need a treatment replan</Title>;\n  } else {\n    return <Title level={4}>Loading...</Title>;\n  }\n};\n\nexport default ResultForm;","import axios from 'axios';\n\n// may need to change the url\nconst url = 'https://replanning-backend.herokuapp.com';\n\nexport async function sendData(details) {\n    const stages = [\"cm0\",\"cmx\",\"cn0\",\"cn1\",\"cn2\",\"ct1\",\"ct1a\",\"ct2\",\"ct2b\",\n    \"ct3\",\"ct4\",\"ebv+\",\"m0\",\"m1\",\"mx\",\"n0\",\"n1\",\"n1b\",\"n2\",\"n2a\",\"n2b\",\n    \"n2c\",\"n3b\",\"nx\",\"p16+\",\"p16-\",\"pn0\",\"pn1\",\"pn2b\",\"pn3b\",\"pnx\",\"pt2\",\n    \"pt3\",\"pt4a\",\"r1\",\"stgi\",\"stgii\",\"stgiia\",\"stgiii\",\"stgiiia\",\"stgiv\",\n    \"stgiva\",\"stgivb\",\"stgx\",\"t0\",\"t1\",\"t1a\",\"t1b\",\"t2\",\"t2a\",\"t2m\",\"t3\",\n    \"t3a\",\"t3b\",\"t4\",\"t4a\",\"t4b\",\"tx\"];\n\n    const loweredStagings = details.staging.map(stage => stage.toLowerCase());\n\n    const stagingOneHot = stages.map((stage) => {\n        if(loweredStagings.includes(stage)) {\n            return 1;\n        } else {\n            return 0;\n        }\n    })\n\n    const data = {\n        neckWidth: details.neckWidth,\n        neckDepth: details.neckDepth,\n        bodyEqSphDi: details.bodyEqSphDi,\n        bodyVolume: details.bodyVolume,\n        weight: details.weight,\n        ctvVol: details.ctvVol,\n        ctvEqdDi: details.ctvEqdDi,\n        ptvVol: details.ptvVol,\n        ptvEqdDi: details.ptvEqdDi,\n        staging: stagingOneHot,\n    };\n    \n    return axios.post(`${url}/api`, data);\n}","import React from 'react';\nimport styles from '../css/MainPage.module.css';\nimport { useState } from 'react';\nimport { Form, Input, Select, InputNumber, Row, Col, Button, message, Popover } from 'antd';\nimport ResultForm from '../Component/ResultForm.jsx';\nimport { sendData } from '../Api/RadiotherapyApi';\n\nconst { Option } = Select;\nconst stagingOptions = [\n    { value: 'cM0', name: 'cM0' },\n    { value: 'cMx', name: 'cMx' },\n    { value: 'cN0', name: 'cN0' },\n    { value: 'cN1', name: 'cN1' },\n    { value: 'cN2', name: 'cN2' },\n    { value: 'cT1', name: 'cT1' },\n    { value: 'cT1a', name: 'cT1a' },\n    { value: 'cT2', name: 'cT2' },\n    { value: 'cT2b', name: 'cT2b' },\n    { value: 'cT3', name: 'cT3' },\n    { value: 'cT4', name: 'cT4' },\n    { value: 'EBV+', name: 'EBV+' },\n    { value: 'M0', name: 'M0' },\n    { value: 'M1', name: 'M1' },\n    { value: 'Mx', name: 'Mx' },\n    { value: 'N0', name: 'N0' },\n    { value: 'N1', name: 'N1' },\n    { value: 'N1b', name: 'N1b' },\n    { value: 'N2', name: 'N2' },\n    { value: 'N2a', name: 'N2a' },\n    { value: 'N2b', name: 'N2b' },\n    { value: 'N2c', name: 'N2c' },\n    { value: 'N3b', name: 'N3b' },\n    { value: 'Nx', name: 'Nx' },\n    { value: 'p16+', name: 'p16+' },\n    { value: 'p16-', name: 'p16-' },\n    { value: 'pN0', name: 'pN0' },\n    { value: 'pN1', name: 'pN1' },\n    { value: 'pN2b', name: 'pN2b' },\n    { value: 'pN3b', name: 'pN3b' },\n    { value: 'pNx', name: 'pNx' },\n    { value: 'pT2', name: 'pT2' },\n    { value: 'pT3', name: 'pT3' },\n    { value: 'pT4a', name: 'pT4a' },\n    { value: 'R1', name: 'R1' },\n    { value: 'StgI', name: 'StgI' },\n    { value: 'StgII', name: 'StgII' },\n    { value: 'StgIIa', name: 'StgIIa' },\n    { value: 'StgIII', name: 'StgIII' },\n    { value: 'StgIIIa', name: 'StgIIIa' },\n    { value: 'StgIV', name: 'StgIV' },\n    { value: 'StgIVa', name: 'StgIVa' },\n    { value: 'StgIVb', name: 'StgIVb' },\n    { value: 'Stgx', name: 'Stgx' },\n    { value: 'T0', name: 'T0' },\n    { value: 'T1', name: 'T1' },\n    { value: 'T1a', name: 'T1a' },\n    { value: 'T2', name: 'T2' },\n    { value: 'T2a', name: 'T2a' },\n    { value: 'T3', name: 'T3' },\n    { value: 'T3a', name: 'T3a' },\n    { value: 'T3b', name: 'T3b' },\n    { value: 'T4', name: 'T4' },\n    { value: 'T4a', name: 'T4a' },\n    { value: 'T4b', name: 'T4b' },\n    { value: 'Tx', name: 'Tx' }\n];\n\n\nconst MainPage = () => {\n\n    const [result, setResult] = useState('');\n    const [visible, setVisible] = React.useState(false);\n\n    function refreshPage() {\n        window.location.reload(false);\n    }\n\n    function onFinish(values) {\n        sendData(values).then(\n            ({ data }) => {\n                const { prediction } = data;\n                setResult(prediction);\n                message.success('Sucessfully submit', 3);\n            },\n            (err) => {\n                message.error('Failed to submit data, please try again.', 3);\n                console.log(err);\n            }\n        );\n        console.log('Success:', values);\n\n        // display the result\n        setVisible(true);\n    };\n\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.inputContainer}>\n                <h1 className=\"title\">Radiotherapy Replanning Suggestion System</h1>\n                <div style={{ paddingLeft: '2%' }}>\n                    <Form onFinish={onFinish} >\n                        <Form.Item\n                            name=\"name\"\n                            label=\"Name / ID\"\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"weight\"\n                                    label=\"Weight (kg)\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"neckWidth\"\n                                    label=\"Neck Width (cm)\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"neckDepth\"\n                                    label=\"Neck Depth (cm)\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"bodyVolume\"\n                                    label=\"Body Volume (cc)\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"bodyEqSphDi\"\n                                    label=\"Body Eq Sph Di (cm)\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n\n                        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n                            <Col span={12}>\n                                <Popover title=\"the radiotherapy clinical target volume\" content=\"Please use the min value\" >\n                                    <Form.Item\n                                        name=\"ctvVol\"\n                                        label=\"CTV Vol\"\n                                        rules={[{ required: true }]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                </Popover>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"ctvEqdDi\"\n                                    label=\"CTV Eqd Di\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Popover title=\"the radiotherapy planning target volume\" content=\"Please use the min value\" >\n                                    <Form.Item\n                                        name=\"ptvVol\"\n                                        label=\"PTV Vol\"\n                                        rules={[{ required: true }]}\n                                    >\n                                        <InputNumber />\n                                    </Form.Item>\n                                </Popover>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item\n                                    name=\"ptvEqdDi\"\n                                    label=\"PTV Eqd Di\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <InputNumber />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                        <Popover title=\"the stages of cancer\" content=\"You can choose multiple options\" >\n                            <Form.Item\n                                name=\"staging\"\n                                rules={[{ required: true }]}\n                                label=\"Staging\"\n                            >\n                                <Select\n                                    mode=\"multiple\"\n                                    placeholder=\"Please select\"\n                                    style={{ width: '100%' }}\n                                >\n                                    {stagingOptions.map(option => (\n                                        <Option value={option.value}>{option.name}</Option>\n                                    ))}\n                                </Select>\n                            </Form.Item>\n                        </Popover>\n\n\n                        <Form.Item>\n                            <Row justify=\"center\">\n                                <Col span={4}>\n                                    <Button type=\"primary\" htmlType=\"submit\"  >Submit</Button>\n                                </Col>\n                                <Col span={4}>\n                                    <Button onClick={refreshPage} >Reset</Button>\n                                </Col>\n                            </Row>\n                        </Form.Item>\n                    </Form>\n                </div>\n                {visible ? <ResultForm result={result} /> : null}\n            </div>\n        </div>\n    );\n};\n\nexport default MainPage;\n","import './App.css';\nimport MainPage from './Pages/mainPage';\n\nfunction App() {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MainPage_container__2eNq4\",\"inputContainer\":\"MainPage_inputContainer__1MWcd\",\"title\":\"MainPage_title__1IIcw\"};"],"sourceRoot":""}